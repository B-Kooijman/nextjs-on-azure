@use 'sass:string';
@use 'sass:math';

//  replace characters in a string, used by svg-url($svg)
//
@function str-replace($string, $search, $replace: '') {
  $index: string.index($string, $search);
  @if $index {
    @return string.slice($string, 1, $index - 1) + $replace + str-replace(string.slice($string, $index + string.length($search)), $search, $replace);
  }
  @return $string;
}
// generate UTF-8 encoded data uri for using inline svg in sass
//
// background-image: svg-url('<svg>...</svg>');
//
@function svg-url($svg) {
  // Chunk up string in order to avoid
  // "SystemStackError: stack level too deep"
  $encoded: '';
  $slice: 2000;
  $index: 0;
  $loops: math.ceil(string.length($svg)/$slice);
  @for $i from 1 through $loops {
    $chunk: string.slice($svg, $index, $index + $slice - 1);
    $chunk: str-replace($chunk, '"', '\'');
    $chunk: str-replace($chunk, '<', '%3C');
    $chunk: str-replace($chunk, '>', '%3E');
    $chunk: str-replace($chunk, '&', '%26');
    $chunk: str-replace($chunk, '#', '%23');
    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }
  @return url('data:image/svg+xml;charset=utf8,#{$encoded}');
}
